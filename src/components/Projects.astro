---
import { Icon } from "astro-icon";
import { Image } from "astro:assets";
import { YouTube } from "@astro-community/astro-embed-youtube";
import FloppyDisk from "./FloppyDisk.astro";
// Import images to be used and insert them into the imageMap
import covidConnectImg from "@assets/covid-connect.png";
import zeldaTimelinesImg from "@assets/zelda-timelines.png";

const projects = await Astro.glob("../content/projects/*.md");
const imageMap: { [key: string]: ImageMetadata } = {
  "Covid Connect": covidConnectImg,
  "Zelda timelines": zeldaTimelinesImg,
};
---

<section id="Projects">
  <h2>
    <Icon name="mdi:hammer-wrench" />
    <span>Projects</span>
  </h2>
  {
    projects.map(({ frontmatter, rawContent }) => (
      <section class="project">
        <aside>
          <FloppyDisk
            title={frontmatter.title}
            color={frontmatter.color}
            organization={frontmatter.organization}
            year={frontmatter.year}
          />
          <ul>
            {frontmatter?.links?.map(({ title, icon, link }) => (
              <li>
                <Icon name={icon} />
                {link ? (
                  <a href={link} target="_blank" rel="noopener noreferrer">
                    {title ?? link}
                  </a>
                ) : (
                  <span>{title}</span>
                )}
              </li>
            ))}
          </ul>
          <section class="technologies">
            <h3>Technologies</h3>
            <ul>
              {frontmatter?.technologies?.map((devicon: string) => (
                <li>
                  <div class="icon">
                    <i class={`devicon-${devicon}-plain`} />
                  </div>
                  <div>{devicon}</div>
                </li>
              ))}
            </ul>
          </section>
        </aside>
        <article>
          <p>{rawContent}</p>
          {imageMap[frontmatter.title] && (
            <Image src={imageMap[frontmatter.title]} alt="Project image" />
          )}
          {frontmatter.video && <YouTube id={frontmatter.video} />}
        </article>
      </section>
    ))
  }
</section>

<style scoped>
  .project {
    padding: 2rem 0;
    display: flex;
    justify-content: center;
    border-bottom: 1px dotted var(--strawberry);
  }

  .project:last-child {
    border-bottom: none;
  }

  aside {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex: 30%;
  }

  aside > ul {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    flex-direction: column;

    & > li {
      display: flex;
      align-items: end;
      width: fit-content;
      background-color: var(--green-pastel);
      padding: 0.4rem;
      border-radius: 0.5rem;
      font-size: 1.1rem;

      & > svg {
        color: var(--deep-sea);
        height: 1.4rem;
        margin-right: 0.5rem;
      }

      & a {
        text-decoration: underline;
      }
    }
  }

  article {
    flex: 70%;
    gap: 1rem;
    background-color: var(--green-tint);
    margin-left: 1rem;
    padding: 0.75rem;
    border-top-right-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    border-left: 1px dotted var(--strawberry);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    & img {
      max-width: 100%;
      height: 100%;
      border-radius: 0.25rem;
      object-fit: contain;
    }
  }

  lite-youtube {
    height: 100%;
    max-width: 100%;
    border-radius: 0.25rem;
  }
  .technologies li {
    flex: 0 0 33.333333%;
  }

  @media (max-width: 800px) {
    section {
      flex-direction: column;
      justify-content: center;
    }
    aside {
      justify-content: space-around;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;

      & > svg {
        display: none;
      }

      & > ul {
        flex-direction: row;
        justify-content: space-evenly;
        overflow: hidden;

        & > li {
          display: flex;
          align-items: center;
          max-width: 30%;

          & > * {
            overflow: hidden;
            overflow-wrap: break-word;
          }
        }
      }
    }
    aside > ul > li,
    .technologies li > div {
      font-size: 0.9rem;
    }
    article {
      border: 0;
      border-radius: 0.5rem;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      margin-left: 0;
      padding-top: 0.5rem;
      background-color: whitesmoke;
    }
    iframe {
      height: 15rem;
    }
    .technologies h3 {
      display: none;
    }
    .technologies {
      border: none;
      margin-top: 0.5rem;
    }
    .technologies li {
      flex: 0 0 10%;
    }
  }
</style>
